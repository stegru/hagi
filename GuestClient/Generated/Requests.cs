
// <auto-generated/>

namespace GuestClient
{
    using System;
    using HagiShared.Api;



[CommandLine.Verb("filemap")]
[Request("/hagi/map")]
public class FileMapRequestOptions : RequestOptions
{
    public override string RequestUrl => "/hagi/map";
      [CommandLine.Option("path")]
      public String Path { get; set; }
      [CommandLine.Option("guest")]
      public String Guest { get; set; }

    public override HostRequest GetRequest() {
        FileMapRequest req = new FileMapRequest();

            req.Path = this.Path;
            req.Guest = this.Guest;

        return req;
    }
}

[CommandLine.Verb("join")]
[Request("/hagi/auth/join")]
public class JoinRequestOptions : RequestOptions
{
    public override string RequestUrl => "/hagi/auth/join";
      [CommandLine.Option("secret")]
      public String SharedSecret { get; set; }
      [CommandLine.Option("guest")]
      public String Guest { get; set; }

    public override HostRequest GetRequest() {
        JoinRequest req = new JoinRequest();

            req.SharedSecret = this.SharedSecret;
            req.Guest = this.Guest;

        return req;
    }
}

[CommandLine.Verb("open")]
[Request("/hagi/open")]
public class OpenRequestOptions : RequestOptions
{
    public override string RequestUrl => "/hagi/open";
      [CommandLine.Option("path")]
      public String Path { get; set; }
      [CommandLine.Option("type")]
      public OpenPathType Type { get; set; }
      [CommandLine.Option("guest")]
      public String Guest { get; set; }

    public override HostRequest GetRequest() {
        OpenRequest req = new OpenRequest();

            req.Path = this.Path;
            req.Type = this.Type;
            req.Guest = this.Guest;

        return req;
    }
}
}